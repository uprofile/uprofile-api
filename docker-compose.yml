services:
  app:
    build: app
    restart: unless-stopped
    command: python app.py
    env_file:
      - .env
    volumes:
      - ./app:/app
    # ports:
    #   - 3017:3000
    networks:
      # - data
      - mongo-net
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}-express.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}-express.rule=${DOMAINS}"
      - "traefik.http.services.${PROJECT_NAME}-express.loadbalancer.server.port=8000"
      - "traefik.http.routers.${PROJECT_NAME}-express-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}-express-secure.rule=${DOMAINS}"
      - "traefik.http.routers.${PROJECT_NAME}-express-secure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-express-secure.tls.certresolver=letsencrypt"
      - "traefik.docker.network=traefik-net"

  # redis:
  #   image: redis:alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./redis.data:/data
  #   networks:
  #     - data

networks:
  # data:
  mongo-net:
    external: true
  traefik-net:
    external: true
